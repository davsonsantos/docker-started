version: '3.9'

services:
  nginx:
    container_name: docker-started-nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    env_file:
      - ./.env
    ports:
      - "${NGINX_PORT}:80"
      - ${NGINX_PORT_SSL}:443
    volumes:
      - ./docker/nginx/:/etc/nginx/conf.d/
      - ./:/var/www
    environment:
      - VIRTUAL_HOST:${VIRTUAL_HOST}
    links:
      - php
    networks:
      - docker-started

  php:
    container_name: docker-started-php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www
    networks:
      - docker-started

  mysql:
    container_name: docker-started-mysql
    build:
      context: .
      dockerfile: docker/mysql/Dockerfile
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - docker-started

  # Redis service
  redis:
    container_name: docker-started-redis
    image: "redis:7.0.7-alpine"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    networks:
      - docker-started

networks:
  docker-started:
    driver: bridge
